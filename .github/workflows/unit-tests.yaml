name: Unit Tests
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    # The tests under `//runtime/tests` use Bazel's `requires-fakeroot` tag,
    # which enables them to manage IP addresses on the loopback network device.
    # That tag is only available for `linux-sandbox`:
    # https://bazel.build/reference/be/common-definitions#common-attributes.
    # However, GitHub Actions normally run in a VM,
    # and Bazel falls back on the simpler `processwrapper-sandbox` in that environment:
    # https://bazel.build/docs/sandboxing#sandboxing-strategies.
    # That means the tests will not run with root privileges
    # and will be unable to manage IP addresses.
    #
    # Work around this by running in a container with explicit `NET_ADMIN` privileges.
    # Processes will run as root within the Debian container.
    container:
      image: debian:stable-slim
      options: --cap-add=NET_ADMIN
    # Running inside a container uses the Bourne shell be default. Use Bash instead.
    defaults:
      run:
        shell: bash
    steps:
      - name: Set up environment
        id: set-up-environment
        run: |
          # Install basic dependencies.
          apt-get update
          apt-get install --yes curl jq openssh-client git gcc g++ python3
          
          # Install the latest release of Bazelisk from GitHub.
          LATEST_BAZELISK="$(
            curl --silent --show-error https://api.github.com/repos/bazelbuild/bazelisk/releases/latest \
              | jq --raw-output '.tag_name'
          )"
          curl --silent --show-error --location --remote-name \
            "https://github.com/bazelbuild/bazelisk/releases/download/${LATEST_BAZELISK}/bazelisk-amd64.deb"
          dpkg --install bazelisk-amd64.deb

          # Store the current date as an output parameter
          # so it can be used as part of the cache key.
          echo "date-today=$(date +'%F')" >> "$GITHUB_OUTPUT"

      - name: Check out repository
        uses: actions/checkout@v4

      # https://github.com/actions/cache/blob/v4.2.3/examples.md#---bazel
      - name: Restore Bazel cache
        id: restore-bazel-cache
        uses: actions/cache/restore@v4
        with:
          key: bazel-cache-${{ steps.set-up-environment.outputs.date-today }}
          path: |
            ~/.cache/bazel
          restore-keys: |
            bazel-cache-

      - name: Build everything
        run: |
          bazel build //...

      - name: Save Bazel cache
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-bazel-cache.outputs.cache-primary-key }}
          path: |
            ~/.cache/bazel

      - name: Run tests
        id: run-tests
        run: |
          # Store the absolute path to the Bazel testlogs as an output parameter
          # so it can be uploaded as an artifact in case of failure.
          echo "bazel-testlogs=$(bazel info bazel-testlogs)" >> "$GITHUB_OUTPUT"

          # Run all tests except for the ones located under `e2e/`.
          bazel test --cache_test_results=no //... -- -//e2e/...

      - name: Upload test logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: bazel-testlogs
          path: ${{ steps.run-tests.outputs.bazel-testlogs }}
